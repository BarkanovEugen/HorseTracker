import TelegramBot from 'node-telegram-bot-api';
import type { Alert, Horse } from '@shared/schema';

class TelegramService {
  private bot: TelegramBot | null = null;
  private botToken: string | null = null;

  constructor() {
    this.botToken = process.env.TELEGRAM_BOT_TOKEN || null;
    
    if (this.botToken) {
      try {
        this.bot = new TelegramBot(this.botToken, { polling: false });
        console.log('üì± Telegram Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Bot:', error);
      }
    } else {
      console.log('‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω - Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã');
    }
  }

  async sendAlertNotification(chatId: string, alert: Alert, horse: Horse): Promise<boolean> {
    if (!this.bot || !chatId) {
      return false;
    }

    try {
      const emoji = this.getAlertEmoji(alert);
      const urgencyText = alert.escalated ? 'üö® –ö–†–ò–¢–ò–ß–ù–û' : '‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï';
      
      const message = `${emoji} ${urgencyText}
      
üêé –õ–æ—à–∞–¥—å: *${horse.name}*
üìç –ü—Ä–æ–±–ª–µ–º–∞: ${alert.title}
üìù –î–µ—Ç–∞–ª–∏: ${alert.description}
‚è∞ –í—Ä–µ–º—è: ${new Date(alert.createdAt!).toLocaleString('ru-RU')}

${alert.escalated ? '‚ùó –õ–æ—à–∞–¥—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω—ã –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç!' : '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ª–æ—à–∞–¥–∏.'}`;

      await this.bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: true
      });

      console.log(`üì§ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      return false;
    }
  }

  async sendAlertResolved(chatId: string, alert: Alert, horse: Horse): Promise<boolean> {
    if (!this.bot || !chatId) {
      return false;
    }

    try {
      const message = `‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê

üêé –õ–æ—à–∞–¥—å: *${horse.name}*
üìç –°—Ç–∞—Ç—É—Å: ${alert.title} - –ó–ê–ö–†–´–¢–û
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}

–õ–æ—à–∞–¥—å –≤–µ—Ä–Ω—É–ª–∞—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∑–æ–Ω—É.`;

      await this.bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: true
      });

      console.log(`üì§ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ—à–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ—à–µ–Ω–∏–∏:', error);
      return false;
    }
  }

  async sendDeviceOfflineNotification(chatId: string, alert: Alert, horse: Horse): Promise<boolean> {
    if (!this.bot || !chatId) {
      return false;
    }

    try {
      const message = `üîã –£–°–¢–†–û–ô–°–¢–í–û –û–¢–ö–õ–Æ–ß–ï–ù–û

üêé –õ–æ—à–∞–¥—å: *${horse.name}*
üì° –ü—Ä–æ–±–ª–µ–º–∞: ${alert.title}
üìù –î–µ—Ç–∞–ª–∏: ${alert.description}
‚è∞ –í—Ä–µ–º—è: ${new Date(alert.createdAt!).toLocaleString('ru-RU')}

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ GPS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.`;

      await this.bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: true
      });

      console.log(`üì§ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏:', error);
      return false;
    }
  }

  private getAlertEmoji(alert: Alert): string {
    switch (alert.type) {
      case 'geofence':
        return alert.escalated ? 'üö®' : '‚ö†Ô∏è';
      case 'device_offline':
        return 'üîã';
      case 'low_battery':
        return 'ü™´';
      default:
        return '‚ö†Ô∏è';
    }
  }

  isEnabled(): boolean {
    return this.bot !== null;
  }
}

export const telegramService = new TelegramService();